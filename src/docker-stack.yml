version: "3.8"

services:
    rabbit:
        hostname: 'rabbit'
        image: rabbitmq:3.8.5-management
        ports:
            - '5672:5672'
            - '15672:15672'
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 30s
            timeout: 30s
            retries: 3
        volumes:
            - rabbit_data:/var/lib/rabbitmq/
            - rabbit_logs:/var/log/rabbitmq/
        deploy:
            mode: global
            placement:
                constraints:
                    - node.role == manager
        networks:
            - predictivemonitoring

    persistence-prediction:
        hostname: 'persistence-prediction'
        image: prediction
        environment:
            - NODECLASS=persistence
            - RABBITURL=rabbit
        volumes:
            - persistence:/persistence/
        deploy:
            mode: replicated
            replicas: 1
        networks:
            - predictivemonitoring

    master-prediction:
        hostname: 'master-prediction'
        image: prediction
        ports:
            - '8000:8000'
        environment:
            - NODECLASS=master
            - RABBITURL=rabbit
        volumes:
            - predict_files:/app/predict_files/
            - task_files:/app/task_files/
        deploy:
            mode: global
            placement:
                constraints:
                    - node.role == manager
        networks:
            - predictivemonitoring

    worker-prediction:
        hostname: 'worker-prediction'
        image: prediction
        environment:
            - NODECLASS=worker
            - RABBITURL=rabbit
        volumes:
            - predict_files:/app/predict_files/
            - task_files:/app/task_files/
        deploy:
            mode: replicated
            replicas: 1
        networks:
            - predictivemonitoring

    persistence-training:
        hostname: 'persistence-training'
        image: training
        environment:
            - NODECLASS=persistence
            - RABBITURL=rabbit
        volumes:
            - persistence:/persistence/
        deploy:
            mode: replicated
            replicas: 1
        networks:
            - predictivemonitoring

    master-training:
        hostname: 'master-training'
        image: training
        ports:
            - '8001:8000'
        environment:
            - NODECLASS=master
            - RABBITURL=rabbit
        volumes:
            - training_files:/app/training_files/
            - task_files:/app/task_files/
        deploy:
            mode: global
            placement:
                constraints:
                    - node.role == manager
        networks:
            - predictivemonitoring

    worker-training:
        hostname: 'worker-training'
        image: training
        environment:
            - NODECLASS=worker
            - RABBITURL=rabbit
        volumes:
            - training_files:/app/training_files/
            - task_files:/app/task_files/
        deploy:
            mode: replicated
            replicas: 1
        networks:
            - predictivemonitoring

    caddy:
        hostname: 'caddy'
        image: caddy-server
        ports:
            - '80:80'
            - '443:443'
        deploy:
            mode: global
            placement:
                constraints:
                    - node.role == manager
        networks:
            - predictivemonitoring

    front:
        hostname: 'front'
        image: frontend
        ports:
            - '4200:4200'
        deploy:
            mode: global
            placement:
                constraints:
                    - node.role == manager
        networks:
            - predictivemonitoring

volumes:
    persistence:
    training_files:
    predict_files:
    task_files:
    rabbit_data:
    rabbit_logs:

networks:
    predictivemonitoring:
        driver: overlay
