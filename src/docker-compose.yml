version: "2"

services:
    resource-queue:
        build: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        hostname: queue
        networks:
            - predictive-net
        healthcheck:
            test: [ "CMD", "nc", "-z", "queue", "5672"]
            interval: 10s
            timeout: 10s
            retries: 5
    front-end:
        build: front-end
        ports:
            - "4200:4200"
        # expose:
        #     - "4200"
        # restart: always
        volumes:
            - frontend_data:/app/dist
        networks:
            - predictive-net
    predictive-persistence:
        build: back-end
        environment:
            - NODECLASS=persistence
            - RABBITURL=queue
        restart: always
        depends_on:
            resource-queue:
                condition: service_healthy
        volumes:
            - task_files:/app/task_files
        networks:
            - predictive-net
    predictive-master:
        build: back-end
        ports:
            - "8000:8000"
        expose:
            - "8000"
        hostname: predictive-master
        environment:
            - NODECLASS=master
            - RABBITURL=queue
        restart: always
        depends_on:
            resource-queue:
                condition: service_healthy
            predictive-persistence:
                condition: service_started
        volumes:
            - task_files:/app/task_files
        networks:
            - predictive-net
    predictive-worker:
        build: back-end
        environment:
            - NODECLASS=worker
            - RABBITURL=queue
        restart: always
        depends_on:
            resource-queue:
                condition: service_healthy
            predictive-persistence:
                condition: service_started
        volumes:
            - task_files:/app/task_files
        networks:
            - predictive-net
    caddy:
        build: caddy
        restart: always
        ports:
            - 80:80
            - 443:443
        volumes:
            - frontend_data:/usr/share/caddy
        networks:
            - predictive-net


volumes:
    task_files: 
    frontend_data:

networks:
    predictive-net:
        driver: bridge


